syntax = "v1"

info(
    title: "支付相关模块"
    desc: "支付相关模块，包含支付宝支付功能"
    author: "雷小天"
    email: "1124378213@qq.com"
    version: "v1.0.0"
)

type (
    // 创建支付订单请求（一步完成：创建订单+支付）
    CreatePaymentReq {
        GoodsId      uint64  `json:"goods_id,optional"`   // 商品ID
        Quantity     uint32  `json:"quantity,optional"`   // 商品数量
        Amount       float64 `json:"amount"`              // 支付金额
        Subject      string  `json:"subject"`             // 订单标题
        Body         string  `json:"body,optional"`       // 订单描述
        ReturnUrl    string  `json:"return_url,optional"` // 支付成功跳转地址
        NotifyUrl    string  `json:"notify_url,optional"` // 支付结果异步通知地址
        Timeout      string  `json:"timeout,optional"`    // 订单超时时间
        ProductCode  string  `json:"product_code,optional"` // 产品码，默认FAST_INSTANT_TRADE_PAY
        PayType      int     `json:"pay_type,optional"`    // 支付类型：1:支付宝2:微信3:银行卡
        BuyType      int     `json:"buy_type,optional"`    // 购买类型：1:捐赠2:购买会员3:商品消费
        Remark       string  `json:"remark,optional"`     // 备注
    }
    
    // 创建支付订单响应
    CreatePaymentResp {
        PaymentId    string `json:"payment_id"`     // 支付ID
        OutTradeNo   string `json:"out_trade_no"`   // 商户订单号
        OrderSn      string `json:"order_sn"`       // 订单号
        PayUrl       string `json:"pay_url"`        // 支付链接
    }
)

type (
    // 支付结果查询请求
    QueryPaymentReq {
        PaymentId    string `json:"payment_id,optional"` // 支付ID
        OrderId      string `json:"order_id,optional"`   // 订单ID
        OutTradeNo   string `json:"out_trade_no,optional"` // 商户订单号
    }
    
    // 支付结果查询响应
    QueryPaymentResp {
        PaymentId      string  `json:"payment_id"`       // 支付ID
        OrderId        string  `json:"order_id"`         // 订单ID
        OutTradeNo     string  `json:"out_trade_no"`     // 商户订单号
        TradeNo        string  `json:"trade_no"`         // 支付宝交易号
        TradeStatus    string  `json:"trade_status"`     // 交易状态
        TotalAmount    float64 `json:"total_amount"`     // 交易金额
        ReceiptAmount  float64 `json:"receipt_amount"`   // 实收金额
        BuyerUserId    string  `json:"buyer_user_id"`    // 买家支付宝用户ID
        BuyerLogonId   string  `json:"buyer_logon_id"`   // 买家支付宝账号
        GmtPayment     string  `json:"gmt_payment"`      // 支付时间
        GmtClose       string  `json:"gmt_close"`        // 交易关闭时间
        Message        string  `json:"message"`          // 返回消息
    }
)

type (
    // 支付退款请求
    RefundPaymentReq {
        PaymentId     string  `json:"payment_id"`        // 支付ID
        OrderId       string  `json:"order_id"`          // 订单ID
        OutTradeNo    string  `json:"out_trade_no"`      // 商户订单号
        RefundAmount  float64 `json:"refund_amount"`     // 退款金额
        RefundReason  string  `json:"refund_reason,optional"` // 退款原因
        OutRequestNo  string  `json:"out_request_no,optional"` // 退款单号
    }
    
    // 支付退款响应
    RefundPaymentResp {
        RefundId      string  `json:"refund_id"`         // 退款ID
        OutRequestNo  string  `json:"out_request_no"`    // 退款单号
        RefundAmount  float64 `json:"refund_amount"`     // 退款金额
        RefundFee     float64 `json:"refund_fee"`        // 退款手续费
        RefundStatus  string  `json:"refund_status"`     // 退款状态
        GmtRefund     string  `json:"gmt_refund"`        // 退款时间
        Message       string  `json:"message"`           // 返回消息
    }
)

type (
    // 支付记录查询请求
    PaymentHistoryReq {
        UserId        uint64  `form:"user_id,optional"`  // 用户ID
        OrderId       string  `form:"order_id,optional"` // 订单ID
        PaymentStatus string  `form:"payment_status,optional"` // 支付状态
        StartTime     string  `form:"start_time,optional"` // 开始时间
        EndTime       string  `form:"end_time,optional"`   // 结束时间
        Page          uint32  `form:"page"`              // 页码
        PageSize      uint32  `form:"page_size"`         // 每页数量
    }
    
    // 支付记录查询响应
    PaymentHistoryResp {
        Page          uint32                    `json:"page"`          // 页码
        PageSize      uint32                    `json:"page_size"`     // 每页数量
        Total         uint64                    `json:"total"`         // 总数
        List          []map[string]interface{} `json:"list"`          // 支付记录列表
    }
)

type (
    // 支付回调通知处理请求（内部使用）
    PaymentNotifyReq {
        NotifyData    string `json:"notify_data"`        // 通知数据
        Sign          string `json:"sign"`               // 签名
        SignType      string `json:"sign_type"`          // 签名类型
    }
    
    // 支付回调通知处理响应
    PaymentNotifyResp {
        Success       bool   `json:"success"`            // 处理是否成功
        Message       string `json:"message"`            // 返回消息
    }
)

// 支付相关接口 - 需要用户认证
@server (
    middleware: JwtMiddleware,AntiSpamMiddleware,RateLimitMiddleware
    prefix:     /api/payment
    group:      payment
)
service gateway-api {
    @doc "创建支付订单"
    @handler CreatePayment
    post /create (CreatePaymentReq) returns (CreatePaymentResp)
    
    @doc "查询支付结果"
    @handler QueryPayment
    get /query (QueryPaymentReq) returns (QueryPaymentResp)
    
    @doc "申请退款"
    @handler RefundPayment
    post /refund (RefundPaymentReq) returns (RefundPaymentResp)
    
    @doc "支付记录查询"
    @handler PaymentHistory
    get /history (PaymentHistoryReq) returns (PaymentHistoryResp)
}

// 支付回调接口 - 公开接口，支付宝回调使用
@server (
    prefix:     /api/payment
    group:      payment
)
service gateway-api {
    @doc "支付结果异步通知"
    @handler PaymentNotify
    post /notify (PaymentNotifyReq) returns (PaymentNotifyResp)
    
    @doc "支付成功页面跳转"
    @handler PaymentReturn
    get /return (PaymentNotifyReq) returns (PaymentNotifyResp)
}
