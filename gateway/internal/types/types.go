// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2

package types

type ArticleLikeReq struct {
	Id uint32 `path:"id"`
}

type ArticleLikeResp struct {
	Data []map[string]interface{} `json:"data"`
}

type ArticleListReq struct {
	Cid      uint32 `form:"cid,optional"`
	Types    uint32 `form:"types,optional"`
	Tid      uint32 `form:"tid,optional"`
	Keywords string `form:"keywords,optional"`
	Page     uint32 `form:"page"`
	PageSize uint32 `form:"page_size"`
}

type ArticleListResp struct {
	Page     uint32                   `json:"page"`
	PageSize uint32                   `json:"page_size"`
	List     []map[string]interface{} `json:"list"`
	Total    uint64                   `json:"total"`
}

type ArticleReq struct {
	Id uint32 `path:"id"`
}

type ArticleResp struct {
	Data map[string]interface{} `json:"data"`
}

type BookChapterReq struct {
	Id uint32 `path:"id"`
}

type BookChapterResp struct {
	Data map[string]interface{} `json:"data"`
}

type BookListReq struct {
	Page     uint32 `form:"page"`
	PageSize uint32 `form:"page_size"`
	Column   uint32 `form:"column,optional"`
	Keywords string `form:"keywords,optional"`
}

type BookListResp struct {
	Page     uint32                   `json:"page"`
	PageSize uint32                   `json:"page_size"`
	List     []map[string]interface{} `json:"list"`
	Total    uint64                   `json:"total"`
}

type BookReq struct {
	Id uint32 `path:"id"`
}

type BookResp struct {
	Data map[string]interface{} `json:"data"`
}

type CategoryListReq struct {
	Page     uint32 `form:"page,optional"`
	PageSize uint32 `form:"page_size,optional"`
}

type CategoryListResp struct {
	Page     uint32                   `json:"page"`
	PageSize uint32                   `json:"page_size"`
	List     []map[string]interface{} `json:"list"`
	Total    uint64                   `json:"total"`
}

type ChatListReq struct {
	Cid      uint32 `form:"cid,optional"`
	Page     uint32 `form:"page"`
	PageSize uint32 `form:"page_size"`
}

type ChatListResp struct {
	Page     uint32                   `json:"page"`
	PageSize uint32                   `json:"page_size"`
	List     []map[string]interface{} `json:"list"`
	Total    uint64                   `json:"total"`
}

type ColumnListResp struct {
	Data []map[string]interface{} `json:"list"`
}

type CommentListReq struct {
	Page     uint32 `form:"page"`
	PageSize uint32 `form:"page_size"`
}

type CommentListResp struct {
	Page     uint32                   `json:"page"`
	PageSize uint32                   `json:"page_size"`
	List     []map[string]interface{} `json:"list"`
	Total    uint64                   `json:"total"`
}

type CreatePaymentReq struct {
	GoodsId     uint64  `json:"goods_id,optional"`     // 商品ID
	Quantity    uint32  `json:"quantity,optional"`     // 商品数量
	Amount      float64 `json:"amount"`                // 支付金额
	Subject     string  `json:"subject"`               // 订单标题
	Body        string  `json:"body,optional"`         // 订单描述
	ReturnUrl   string  `json:"return_url,optional"`   // 支付成功跳转地址
	NotifyUrl   string  `json:"notify_url,optional"`   // 支付结果异步通知地址
	Timeout     string  `json:"timeout,optional"`      // 订单超时时间
	ProductCode string  `json:"product_code,optional"` // 产品码，默认FAST_INSTANT_TRADE_PAY
	PayType     int     `json:"pay_type,optional"`     // 支付类型：1:支付宝2:微信3:银行卡
	BuyType     int     `json:"pay_type,optional"`     // 购买类型：1:捐赠2:购买会员3:商品消费
	Remark      string  `json:"remark,optional"`       // 备注
}

type CreatePaymentResp struct {
	PaymentId  string `json:"payment_id"`   // 支付ID
	OutTradeNo string `json:"out_trade_no"` // 商户订单号
	OrderSn    string `json:"order_sn"`     // 订单号
	PayUrl     string `json:"pay_url"`      // 支付链接
}

type GetqrReq struct {
	WsUserId string `path:"ws_user_id"`
}

type GetqrResp struct {
	Uuid  string `json:"uuid"`
	QrImg string `json:"qr_img"`
}

type InfoResp struct {
	Data map[string]interface{} `json:"data"`
}

type LoginReq struct {
	LoginType int32                  `json:"login_type,optional"`
	Username  string                 `json:"username,optional"`
	Password  string                 `json:"password,optional"`
	Code      string                 `json:"code,optional"`
	Uuid      string                 `json:"uuid,optional"`
	Userinfo  map[string]interface{} `json:"userinfo"`
}

type LoginResp struct {
	AccessToken string                 `json:"access_token"`
	ExpiresIn   uint64                 `json:"expires_in"`
	User        map[string]interface{} `json:"user"`
}

type OrderListReq struct {
	Page     uint32 `form:"page"`
	PageSize uint32 `form:"page_size"`
}

type OrderListResp struct {
	Page     uint32                   `json:"page"`
	PageSize uint32                   `json:"page_size"`
	List     []map[string]interface{} `json:"list"`
	Total    uint64                   `json:"total"`
}

type PaymentHistoryReq struct {
	UserId        uint64 `form:"user_id,optional"`        // 用户ID
	OrderId       string `form:"order_id,optional"`       // 订单ID
	PaymentStatus string `form:"payment_status,optional"` // 支付状态
	StartTime     string `form:"start_time,optional"`     // 开始时间
	EndTime       string `form:"end_time,optional"`       // 结束时间
	Page          uint32 `form:"page"`                    // 页码
	PageSize      uint32 `form:"page_size"`               // 每页数量
}

type PaymentHistoryResp struct {
	Page     uint32                   `json:"page"`      // 页码
	PageSize uint32                   `json:"page_size"` // 每页数量
	Total    uint64                   `json:"total"`     // 总数
	List     []map[string]interface{} `json:"list"`      // 支付记录列表
}

type PaymentNotifyReq struct {
	NotifyData string `json:"notify_data"` // 通知数据
	Sign       string `json:"sign"`        // 签名
	SignType   string `json:"sign_type"`   // 签名类型
}

type PaymentNotifyResp struct {
	Success bool   `json:"success"` // 处理是否成功
	Message string `json:"message"` // 返回消息
}

type QrStatusReq struct {
	Uuid   string `json:"uuid"`
	Status uint32 `json:"status"`
}

type QrStatusResp struct {
	Data uint32 `json:"data"`
}

type QueryPaymentReq struct {
	PaymentId  string `json:"payment_id,optional"`   // 支付ID
	OrderId    string `json:"order_id,optional"`     // 订单ID
	OutTradeNo string `json:"out_trade_no,optional"` // 商户订单号
}

type QueryPaymentResp struct {
	PaymentId     string  `json:"payment_id"`     // 支付ID
	OrderId       string  `json:"order_id"`       // 订单ID
	OutTradeNo    string  `json:"out_trade_no"`   // 商户订单号
	TradeNo       string  `json:"trade_no"`       // 支付宝交易号
	TradeStatus   string  `json:"trade_status"`   // 交易状态
	TotalAmount   float64 `json:"total_amount"`   // 交易金额
	ReceiptAmount float64 `json:"receipt_amount"` // 实收金额
	BuyerUserId   string  `json:"buyer_user_id"`  // 买家支付宝用户ID
	BuyerLogonId  string  `json:"buyer_logon_id"` // 买家支付宝账号
	GmtPayment    string  `json:"gmt_payment"`    // 支付时间
	GmtClose      string  `json:"gmt_close"`      // 交易关闭时间
	Message       string  `json:"message"`        // 返回消息
}

type RefundPaymentReq struct {
	PaymentId    string  `json:"payment_id"`              // 支付ID
	OrderId      string  `json:"order_id"`                // 订单ID
	OutTradeNo   string  `json:"out_trade_no"`            // 商户订单号
	RefundAmount float64 `json:"refund_amount"`           // 退款金额
	RefundReason string  `json:"refund_reason,optional"`  // 退款原因
	OutRequestNo string  `json:"out_request_no,optional"` // 退款单号
}

type RefundPaymentResp struct {
	RefundId     string  `json:"refund_id"`      // 退款ID
	OutRequestNo string  `json:"out_request_no"` // 退款单号
	RefundAmount float64 `json:"refund_amount"`  // 退款金额
	RefundFee    float64 `json:"refund_fee"`     // 退款手续费
	RefundStatus string  `json:"refund_status"`  // 退款状态
	GmtRefund    string  `json:"gmt_refund"`     // 退款时间
	Message      string  `json:"message"`        // 返回消息
}

type RegisterReq struct {
	Username string `json:"username"`
	Password string `json:"password"`
	Code     string `json:"code"`
}

type RegisterResp struct {
	Data map[string]interface{} `json:"data"`
}

type TagsListResp struct {
	Data []map[string]interface{} `json:"list"`
}

type UpdateInfoReq struct {
	Nickname string `json:"nickname,optional"`
	HeadImg  string `json:"head_img,optional"`
}

type UpdateInfoResp struct {
	Data map[string]interface{} `json:"data"`
}
