// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2

package types

type ArticleReq struct {
	Id uint32 `path:"id"`
}

type ArticleResp struct {
	Data map[string]interface{} `json:"data"`
}

type ArticleSaveReq struct {
	Id          int64  `json:"id,optional"`
	Title       string `json:"title"`
	Cid         uint64 `json:"cid"`
	Tid         []int  `json:"tid"`
	Author      string `json:"author"`
	Content     string `json:"content"`
	Keywords    string `json:"keywords,optional"`
	Path        string `json:"path"`
	Description string `json:"description"`
	IsHot       int64  `json:"is_hot"`
	IsRec       int64  `json:"is_rec"`
	IsTop       int64  `json:"is_top"`
	IsOriginal  int64  `json:"is_original"`
	Status      int64  `json:"status"`
	CreatedAt   string `json:"created_at,optional"`
}

type ArticleSaveResp struct {
	Data bool `json:"data"`
}

type ArticlesReq struct {
	Cid      int    `form:"cid,optional"`
	Keywords string `form:"keywords,optional"`
	Page     int    `form:"page,default=1"`
	PageSize int    `form:"page_size,default=10"`
}

type ArticlesResp struct {
	Page     int                      `json:"page"`
	PageSize int                      `json:"page_size"`
	List     []map[string]interface{} `json:"list"`
	Total    int64                    `json:"total"`
}

type CategoryResp struct {
	Data []map[string]interface{} `json:"data"`
}

type InfoResp struct {
	User
}

type LoginReq struct {
	Username    string `json:"username"`
	Password    string `json:"password"`
	CaptchaId   string `json:"captcha_id,optional"`
	CaptchaCode string `json:"captcha_code,optional"`
}

type LoginResp struct {
	Token string `json:"token"`
	User  User   `json:"user"`
}

type MenuSaveReq struct {
	Id      int64  `json:"id,optional"`
	Title   string `json:"title"`
	Index   string `json:"index"`
	Icon    string `json:"icon,optional"`
	Permiss string `json:"permiss,optional"`
	Pid     int64  `json:"pid"`
	Sort    int64  `json:"sort,optional"`
}

type MenuSaveResp struct {
	Data bool `json:"data"`
}

type MenusReq struct {
	Perm string `form:"perm,optional"`
}

type MenusResp struct {
	Data []map[string]interface{} `json:"data"`
}

type PremSaveReq struct {
	RoleId  int64   `json:"role_id"`
	PermIds []int64 `json:"perm_ids"`
}

type PremSaveResp struct {
	Data bool `json:"data"`
}

type RolesReq struct {
	Keywords string `form:"keywords,optional"`
	Page     int    `form:"page,default=1"`
	PageSize int    `form:"page_size,default=10"`
}

type RolesResp struct {
	Page     int                      `json:"page"`
	PageSize int                      `json:"page_size"`
	List     []map[string]interface{} `json:"list"`
	Total    int64                    `json:"total"`
}

type TagsResp struct {
	Data []map[string]interface{} `json:"data"`
}

type UploadResp struct {
	Url string `json:"url"`
}

type User struct {
	Id          int      `json:"id"`
	Username    string   `json:"username"`
	Role        string   `json:"role"`
	Permissions []string `json:"permissions"`
}

type UsersReq struct {
	Role     string `form:"role,optional"`
	Keywords string `form:"keywords,optional"`
	Page     int    `form:"page,default=1"`
	PageSize int    `form:"page_size,default=10"`
}

type UsersResp struct {
	Page     int                      `json:"page"`
	PageSize int                      `json:"page_size"`
	List     []map[string]interface{} `json:"list"`
	Total    int64                    `json:"total"`
}
