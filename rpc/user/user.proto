syntax = "proto3";

package user;
option go_package="./user";

message GetqrReq{}
message GetqrResp{
  string uuid = 1;
  string qr_img = 2;
}

message QrStatusReq{
  string uuid = 1;
  uint32 status = 2;
}
message QrStatusResp{
  string data = 1;
}

message RegisterReq{
  string username = 1;
  string password = 2;
  string code = 3;
}
message RegisterResp{
  string data = 1;
}

message LoginReq{
  string username = 1;
  string password = 2;
  uint32 login_type = 3;
  string code = 4;
  string uuid = 5;
  string nickname = 6;
  string head_img = 7;
}
message LoginResp{
  string data = 1;
}

message InfoReq {
  uint32 id = 1;
}
message InfoResp {
  string data = 1;
}

message UpdateInfoReq{
  string nickname = 1;
  string head_img = 2;
  uint32 id = 3;
}
message UpdateInfoResp{
  string data = 1;
}

service User {
  rpc Getqr (GetqrReq) returns (GetqrResp);
  rpc QrStatus (QrStatusReq) returns (QrStatusResp);
  rpc Register (RegisterReq) returns (RegisterResp);
  rpc Login (LoginReq) returns (LoginResp);
  rpc Info (InfoReq) returns (InfoResp);
  rpc UpdateInfo (UpdateInfoReq) returns (UpdateInfoResp);
}

//goctl rpc protoc user.proto --go_out=. --go-grpc_out=. --zrpc_out=. -m