// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: user.proto

package user

import (
	"context"

	"lxtian-blog/rpc/user/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetMembershipListReq  = user.GetMembershipListReq
	GetMembershipListResp = user.GetMembershipListResp
	GetqrReq              = user.GetqrReq
	GetqrResp             = user.GetqrResp
	InfoReq               = user.InfoReq
	InfoResp              = user.InfoResp
	LoginReq              = user.LoginReq
	LoginResp             = user.LoginResp
	MembershipType        = user.MembershipType
	QrStatusReq           = user.QrStatusReq
	QrStatusResp          = user.QrStatusResp
	RegisterReq           = user.RegisterReq
	RegisterResp          = user.RegisterResp
	UpdateInfoReq         = user.UpdateInfoReq
	UpdateInfoResp        = user.UpdateInfoResp
	UpgradeMembershipReq  = user.UpgradeMembershipReq
	UpgradeMembershipResp = user.UpgradeMembershipResp

	User interface {
		Getqr(ctx context.Context, in *GetqrReq, opts ...grpc.CallOption) (*GetqrResp, error)
		QrStatus(ctx context.Context, in *QrStatusReq, opts ...grpc.CallOption) (*QrStatusResp, error)
		Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
		Info(ctx context.Context, in *InfoReq, opts ...grpc.CallOption) (*InfoResp, error)
		UpdateInfo(ctx context.Context, in *UpdateInfoReq, opts ...grpc.CallOption) (*UpdateInfoResp, error)
		// 会员相关接口
		GetMembershipList(ctx context.Context, in *GetMembershipListReq, opts ...grpc.CallOption) (*GetMembershipListResp, error)
		UpgradeMembership(ctx context.Context, in *UpgradeMembershipReq, opts ...grpc.CallOption) (*UpgradeMembershipResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) Getqr(ctx context.Context, in *GetqrReq, opts ...grpc.CallOption) (*GetqrResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Getqr(ctx, in, opts...)
}

func (m *defaultUser) QrStatus(ctx context.Context, in *QrStatusReq, opts ...grpc.CallOption) (*QrStatusResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.QrStatus(ctx, in, opts...)
}

func (m *defaultUser) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUser) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUser) Info(ctx context.Context, in *InfoReq, opts ...grpc.CallOption) (*InfoResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.Info(ctx, in, opts...)
}

func (m *defaultUser) UpdateInfo(ctx context.Context, in *UpdateInfoReq, opts ...grpc.CallOption) (*UpdateInfoResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.UpdateInfo(ctx, in, opts...)
}

// 会员相关接口
func (m *defaultUser) GetMembershipList(ctx context.Context, in *GetMembershipListReq, opts ...grpc.CallOption) (*GetMembershipListResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.GetMembershipList(ctx, in, opts...)
}

func (m *defaultUser) UpgradeMembership(ctx context.Context, in *UpgradeMembershipReq, opts ...grpc.CallOption) (*UpgradeMembershipResp, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.UpgradeMembership(ctx, in, opts...)
}
