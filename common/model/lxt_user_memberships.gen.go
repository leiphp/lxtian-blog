// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameLxtUserMembership = "lxt_user_memberships"

// LxtUserMembership 用户会员表
type LxtUserMembership struct {
	ID               int64          `gorm:"column:id;primaryKey;autoIncrement:true;comment:主键ID" json:"id"`                      // 主键ID
	UserID           int64          `gorm:"column:user_id;not null;comment:用户ID" json:"user_id"`                                 // 用户ID
	MembershipTypeID int64          `gorm:"column:membership_type_id;not null;comment:会员类型ID" json:"membership_type_id"`         // 会员类型ID
	StartTime        time.Time      `gorm:"column:start_time;not null;comment:会员开始时间" json:"start_time"`                         // 会员开始时间
	EndTime          time.Time      `gorm:"column:end_time;not null;comment:会员结束时间" json:"end_time"`                             // 会员结束时间
	IsActive         int32          `gorm:"column:is_active;not null;default:1;comment:是否激活：1是0否" json:"is_active"`              // 是否激活：1是0否
	TotalDays        int32          `gorm:"column:total_days;not null;comment:累计会员总天数（用于等级计算）" json:"total_days"`                // 累计会员总天数（用于等级计算）
	Level            int32          `gorm:"column:level;not null;default:1;comment:当前等级" json:"level"`                           // 当前等级
	CreatedAt        time.Time      `gorm:"column:created_at;not null;default:CURRENT_TIMESTAMP;comment:创建时间" json:"created_at"` // 创建时间
	UpdatedAt        time.Time      `gorm:"column:updated_at;not null;default:CURRENT_TIMESTAMP;comment:更新时间" json:"updated_at"` // 更新时间
	DeletedAt        gorm.DeletedAt `gorm:"column:deleted_at;comment:删除时间" json:"deleted_at"`                                    // 删除时间
}

// TableName LxtUserMembership's table name
func (*LxtUserMembership) TableName() string {
	return TableNameLxtUserMembership
}
